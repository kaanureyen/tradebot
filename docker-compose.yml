services:
  redis:
    image: redis:alpine
    container_name: redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    restart: always
  mongodb:
    image: mongo:latest
    container_name: mongodb
    ports:
      - "27017:27017"
    volumes:
      - mongo_data:/data/db
    restart: always

  aggregator:
    build:
      context: .
      dockerfile: ./cmd/aggregator/Dockerfile
    depends_on:
      - redis
      - mongodb
      - fetcher
    restart: always
    ports:
      - "9001:9001" # /healthz endpoint
    environment:
      - HEALTH_PORT=9001
    healthcheck:
      test: ["CMD", "wget", "--spider", "-q", "http://localhost:9001/healthz"]
      interval: 30s
      timeout: 5s
      retries: 3
      start_period: 10s
  fetcher:
    build:
      context: .
      dockerfile: ./cmd/fetcher/Dockerfile
    depends_on:
      - redis
    restart: always
    ports:
      - "9000:9000" # /healthz endpoint
      - "2112:2112" # /metrics endpoint
    environment:
      - HEALTH_PORT=9000
    healthcheck:
      test: ["CMD", "wget", "--spider", "-q", "http://localhost:9000/healthz"]
      interval: 30s
      timeout: 5s
      retries: 3
      start_period: 10s
  signal_gen:
    build:
      context: .
      dockerfile: ./cmd/signal_gen/Dockerfile
    depends_on:
      - redis
      - aggregator
    restart: always
    ports:
      - "9002:9002" # /healthz endpoint
    environment:
      - HEALTH_PORT=9002
    healthcheck:
      test: ["CMD", "wget", "--spider", "-q", "http://localhost:9002/healthz"]
      interval: 30s
      timeout: 5s
      retries: 3
      start_period: 10s

  prometheus:
    image: prom/prometheus
    container_name: prometheus
    volumes:
      - ./configs/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    ports:
      - "9090:9090"
    restart: always

  grafana:
    image: grafana/grafana
    container_name: grafana
    ports:
      - "3000:3000"
    volumes:
      - ./configs/grafana/datasources:/etc/grafana/provisioning/datasources
      - ./configs/grafana/dashboards:/etc/grafana/provisioning/dashboards
    restart: always

  cadvisor:
    image: gcr.io/cadvisor/cadvisor:latest
    container_name: cadvisor
    ports:
      - "8080:8080"
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:ro
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
    restart: always

volumes:
  redis_data:
  mongo_data:
  prometheus_data: